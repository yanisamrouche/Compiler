/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AIifInst extends PInst
{
    private PIif _iif_;

    public AIifInst()
    {
        // Constructor
    }

    public AIifInst(
        @SuppressWarnings("hiding") PIif _iif_)
    {
        // Constructor
        setIif(_iif_);

    }

    @Override
    public Object clone()
    {
        return new AIifInst(
            cloneNode(this._iif_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIifInst(this);
    }

    public PIif getIif()
    {
        return this._iif_;
    }

    public void setIif(PIif node)
    {
        if(this._iif_ != null)
        {
            this._iif_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._iif_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._iif_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._iif_ == child)
        {
            this._iif_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._iif_ == oldChild)
        {
            setIif((PIif) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
