/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ALFunctionDecLFunctionDec extends PLFunctionDec
{
    private PFunctionDec _functionDec_;
    private PLFunctionDec _lFunctionDec_;

    public ALFunctionDecLFunctionDec()
    {
        // Constructor
    }

    public ALFunctionDecLFunctionDec(
        @SuppressWarnings("hiding") PFunctionDec _functionDec_,
        @SuppressWarnings("hiding") PLFunctionDec _lFunctionDec_)
    {
        // Constructor
        setFunctionDec(_functionDec_);

        setLFunctionDec(_lFunctionDec_);

    }

    @Override
    public Object clone()
    {
        return new ALFunctionDecLFunctionDec(
            cloneNode(this._functionDec_),
            cloneNode(this._lFunctionDec_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALFunctionDecLFunctionDec(this);
    }

    public PFunctionDec getFunctionDec()
    {
        return this._functionDec_;
    }

    public void setFunctionDec(PFunctionDec node)
    {
        if(this._functionDec_ != null)
        {
            this._functionDec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._functionDec_ = node;
    }

    public PLFunctionDec getLFunctionDec()
    {
        return this._lFunctionDec_;
    }

    public void setLFunctionDec(PLFunctionDec node)
    {
        if(this._lFunctionDec_ != null)
        {
            this._lFunctionDec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lFunctionDec_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._functionDec_)
            + toString(this._lFunctionDec_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._functionDec_ == child)
        {
            this._functionDec_ = null;
            return;
        }

        if(this._lFunctionDec_ == child)
        {
            this._lFunctionDec_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._functionDec_ == oldChild)
        {
            setFunctionDec((PFunctionDec) newChild);
            return;
        }

        if(this._lFunctionDec_ == oldChild)
        {
            setLFunctionDec((PLFunctionDec) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
